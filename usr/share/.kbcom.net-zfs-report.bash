#!/bin/bash

convert_byte_megabyte()
{
 local PARAMETER_INTEGER_BYTE="$1"

 local LOCAL_INTEGER_HUNDREDMEGABYTE

 LOCAL_INTEGER_HUNDREDMEGABYTE="$(( PARAMETER_INTEGER_BYTE * 100 / 1048576 ))"

 echo "${LOCAL_INTEGER_HUNDREDMEGABYTE:0:-2}.${LOCAL_INTEGER_HUNDREDMEGABYTE: -2}"
}

convert_file_namevalue()
{
 local PARAMETER_FILE_SOURCE="$1"
 local -n PARAMETER_STRING_FIRSTLINE="$2"
 local -n PARAMETER_ARRAY_RESULT="$3"

 local LOCAL_BOOLEAN_FIRSTLINE
 local LOCAL_STRING_SOURCE
 local LOCAL_LINESTRING_SOURCE
 local LOCAL_STRING_NAME
 local LOCAL_STRING_VALUE

 PARAMETER_ARRAY_RESULT=()
 LOCAL_BOOLEAN_FIRSTLINE=true

 LOCAL_STRING_SOURCE=$(<"$PARAMETER_FILE_SOURCE")

 IFS=$'\n'
 for LOCAL_LINESTRING_SOURCE in $LOCAL_STRING_SOURCE
 do
  if $LOCAL_BOOLEAN_FIRSTLINE
  then
   PARAMETER_STRING_FIRSTLINE="$LOCAL_LINESTRING_SOURCE"
   LOCAL_BOOLEAN_FIRSTLINE=false
   continue
  fi

  LOCAL_STRING_NAME="${LOCAL_LINESTRING_SOURCE%% *}"
  LOCAL_STRING_VARIABLE="${LOCAL_LINESTRING_SOURCE##* }"

  PARAMETER_ARRAY_RESULT["$LOCAL_STRING_NAME"]="$LOCAL_STRING_VARIABLE"
 done
}

calculate_percentage()
{
 local PARAMETER_INTEGER_VALUE="$1"
 local PARAMETER_INTEGER_100PERCENTAGE="$2"

 local LOCAL_INTEGER_HUNDREDPERCENTAGE

 LOCAL_INTEGER_HUNDREDPERCENTAGE="$(( PARAMETER_INTEGER_VALUE * 10000 / $PARAMETER_INTEGER_100PERCENTAGE ))"

 echo "${LOCAL_INTEGER_HUNDREDPERCENTAGE:0:-2}.${LOCAL_INTEGER_HUNDREDPERCENTAGE: -2}"
}

print_zpool_status()
{
 /sbin/zpool status
}

print_zpool_verbosediostat()
{
 /sbin/zpool iostat -v
}

print_arc_size()
{
 local -n PARAMETER_ARRAY_ARCSTATS="$1"

 echo "
Arc Size:
 Current Size (size):   ${PARAMETER_ARRAY_ARCSTATS[size]} ($(convert_byte_megabyte ${PARAMETER_ARRAY_ARCSTATS[size]}) MB)
 Target Size (c):       ${PARAMETER_ARRAY_ARCSTATS[c]} ($(convert_byte_megabyte ${PARAMETER_ARRAY_ARCSTATS[c]}) MB)
 Minimum Size (c_min):  ${PARAMETER_ARRAY_ARCSTATS[c_min]} ($(convert_byte_megabyte ${PARAMETER_ARRAY_ARCSTATS[c_min]}) MB)
 Maximum Size (c_max):  ${PARAMETER_ARRAY_ARCSTATS[c_max]} ($(convert_byte_megabyte ${PARAMETER_ARRAY_ARCSTATS[c_max]}) MB)"
}

print_arc_sizebreakdown()
{
 local -n PARAMETER_ARRAY_ARCSTATS="$1"

 local LOCAL_INTEGER_MFU

 LOCAL_INTEGER_MFU=$(( ${PARAMETER_ARRAY_ARCSTATS[c]} - ${PARAMETER_ARRAY_ARCSTATS[p]} ))

 echo "
ARC Size Breakdown:
 Most Recently Used Cache Size (p):     ${PARAMETER_ARRAY_ARCSTATS[p]} ($(convert_byte_megabyte ${PARAMETER_ARRAY_ARCSTATS[p]}) MB - $(calculate_percentage ${PARAMETER_ARRAY_ARCSTATS[p]} ${PARAMETER_ARRAY_ARCSTATS[c]})%)
 Most Frequently Used Cache Size (c-p): $LOCAL_INTEGER_MFU ($(convert_byte_megabyte $LOCAL_INTEGER_MFU) MB - $(calculate_percentage $LOCAL_INTEGER_MFU ${PARAMETER_ARRAY_ARCSTATS[c]})%)"
}

print_arc_efficiencytotal()
{
 local -n PARAMETER_ARRAY_ARCSTATS="$1"
 local -n PARAMETER_ARRAY_ARCSTATSLOG="$2"
}












2zfs_getdate_arcstatslog()
{
 local LOCAL_FILE_ARCSTATSLOG="$1"

 /usr/bin/head -n 1 "$LOCAL_FILE_ARCSTATSLOG"
}

zfs_getarray_arcstatslog()
{
 local LOCAL_FILE_ARCSTATSLOG="$1"

 local LOCAL_ARRAY_ARCSTATSLOG
 local LOCAL_ITEMSTRING_ARCSTATSLOG

 LOCAL_ARRAY_ARCSTATSLOG=( $(/bin/cat "$LOCAL_FILE_ARCSTATSLOG") )

 for LOCAL_ITEMSTRING_ARCSTATSLOG in "${LOCAL_ARRAY_ARCSTATSLOG[@]}"
 do
  GLOBAL_ARRAY_ARCSTATSLOG["${LOCAL_ITEMSTRING_ARCSTATSLOG%% *}"]="${LOCAL_ITEMSTRING_ARCSTATSLOG##* }"
 done
}

zfs_write_arcstatslog()
{
 local LOCAL_STRING_DATETIME="$1"
 local LOCAL_FILE_ARCSTATSLOG="$2"

 local LOCAL_ITEMSTRING_ARCSTATSLOG

 echo "$LOCAL_STRING_DATETIME" 1>"$LOCAL_FILE_ARCSTATSLOG"

 for LOCAL_ITEMKEYSTRING_ARCSTATS in "${!GLOBAL_ARRAY_ARCSTATS[@]}"
 do
  echo "$LOCAL_ITEMKEYSTRING_ARCSTATS ${GLOBAL_ARRAY_ARCSTATS[$LOCAL_ITEMKEYSTRING_ARCSTATS]}" 1>>"$LOCAL_FILE_ARCSTATSLOG"
 done
}

zfs_print_arcstats()
{
 local LOCAL_ITEM_ARCSTATINDEX
 local LOCAL_NUMBER_HITSVALUE
 local LOCAL_NUMBER_MISSESVALUE
 local LOCAL_RATIO_HITS
 local LOCAL_RATIO_MISSES

 for LOCAL_ITEM_ARCSTATINDEX in "${GLOBAL_ARRAY_ARCSTATSINDEX[@]}"
 do
  echo

  if [ -z "${GLOBAL_ARRAY_ARCSTATS[${LOCAL_ITEM_ARCSTATINDEX:0:-4}misses]}" ]
  then
   echo "$LOCAL_ITEM_ARCSTATINDEX: ${GLOBAL_ARRAY_ARCSTATS[$LOCAL_ITEM_ARCSTATINDEX]}"
  else
   LOCAL_NUMBER_HITSVALUE="${GLOBAL_ARRAY_ARCSTATS[$LOCAL_ITEM_ARCSTATINDEX]}"
   LOCAL_NUMBER_MISSESVALUE="${GLOBAL_ARRAY_ARCSTATS[${LOCAL_ITEM_ARCSTATINDEX:0:-4}misses]}"

   echo "$LOCAL_ITEM_ARCSTATINDEX: $LOCAL_NUMBER_HITSVALUE"
   echo "${LOCAL_ITEM_ARCSTATINDEX:0:-4}misses: $LOCAL_NUMBER_MISSESVALUE"

   if [ "$LOCAL_NUMBER_HITSVALUE" -ne 0 ] 2>/dev/null && [ "$LOCAL_NUMBER_MISSESVALUE" -ne 0 ] 2>/dev/null
   then
    let "LOCAL_RATIO_HITS=($LOCAL_NUMBER_HITSVALUE*10000)/($LOCAL_NUMBER_HITSVALUE+$LOCAL_NUMBER_MISSESVALUE)"
    let "LOCAL_RATIO_MISSES=($LOCAL_NUMBER_MISSESVALUE*10000)/($LOCAL_NUMBER_HITSVALUE+$LOCAL_NUMBER_MISSESVALUE)"

    echo "hit ration: ${LOCAL_RATIO_HITS:0:-2}.${LOCAL_RATIO_HITS: -2}%"
    echo "miss ration: ${LOCAL_RATIO_MISSES:0:-2}.${LOCAL_RATIO_MISSES: -2}%"
   fi
  fi
 done
}

zfs_print_arcstatslog()
{
 local LOCAL_ITEM_ARCSTATINDEX
 local LOCAL_NUMBER_HITSVALUE
 local LOCAL_NUMBER_MISSESVALUE
 local LOCAL_RATIO_HITS
 local LOCAL_RATIO_MISSES
 local LOCAL_NUMBER_HITSLOGVALUE
 local LOCAL_NUMBER_MISSESLOGVALUE
 local LOCAL_NUMBER_HITSDELTA
 local LOCAL_NUMBER_MISSESDELTA
 local LOCAL_RATIO_HITSDELTA
 local LOCAL_RATIO_MISSESDELTA

 for LOCAL_ITEM_ARCSTATINDEX in "${GLOBAL_ARRAY_ARCSTATSINDEX[@]}"
 do
  echo

  if [ -z "${GLOBAL_ARRAY_ARCSTATS[${LOCAL_ITEM_ARCSTATINDEX:0:-4}misses]}" ]
  then
   echo -n "$LOCAL_ITEM_ARCSTATINDEX: ${GLOBAL_ARRAY_ARCSTATS[$LOCAL_ITEM_ARCSTATINDEX]}"

   if [ ! -z "${GLOBAL_ARRAY_ARCSTATSLOG[$LOCAL_ITEM_ARCSTATINDEX]}" ]
   then
    echo " (${GLOBAL_ARRAY_ARCSTATSLOG[$LOCAL_ITEM_ARCSTATINDEX]})"
   else
    echo
   fi
  else
   LOCAL_NUMBER_HITSVALUE="${GLOBAL_ARRAY_ARCSTATS[$LOCAL_ITEM_ARCSTATINDEX]}"
   LOCAL_NUMBER_HITSLOGVALUE="${GLOBAL_ARRAY_ARCSTATSLOG[$LOCAL_ITEM_ARCSTATINDEX]}"
   LOCAL_NUMBER_MISSESVALUE="${GLOBAL_ARRAY_ARCSTATS[${LOCAL_ITEM_ARCSTATINDEX:0:-4}misses]}"
   LOCAL_NUMBER_MISSESLOGVALUE="${GLOBAL_ARRAY_ARCSTATSLOG[${LOCAL_ITEM_ARCSTATINDEX:0:-4}misses]}"

   echo -n "$LOCAL_ITEM_ARCSTATINDEX: $LOCAL_NUMBER_HITSVALUE"

   if [ ! -z "$LOCAL_NUMBER_HITSLOGVALUE" ]
   then
    echo " ($LOCAL_NUMBER_HITSLOGVALUE)"
   else
    echo
   fi

   echo -n "${LOCAL_ITEM_ARCSTATINDEX:0:-4}misses: $LOCAL_NUMBER_MISSESVALUE"

   if [ ! -z "$LOCAL_NUMBER_MISSESLOGVALUE" ]
   then
    echo " ($LOCAL_NUMBER_MISSESLOGVALUE)"
   else
    echo
   fi

   if [ "$LOCAL_NUMBER_HITSVALUE" -ne 0 ] 2>/dev/null && [ "$LOCAL_NUMBER_MISSESVALUE" -ne 0 ] 2>/dev/null
   then
    let "LOCAL_RATIO_HITS=($LOCAL_NUMBER_HITSVALUE*10000)/($LOCAL_NUMBER_HITSVALUE+$LOCAL_NUMBER_MISSESVALUE)"
    let "LOCAL_RATIO_MISSES=($LOCAL_NUMBER_MISSESVALUE*10000)/($LOCAL_NUMBER_HITSVALUE+$LOCAL_NUMBER_MISSESVALUE)"
   else
    LOCAL_RATIO_HITS=""
    LOCAL_RATIO_MISSES=""
   fi

   if [ "$LOCAL_NUMBER_HITSLOGVALUE" -ne 0 ] 2>/dev/null && [ "$LOCAL_NUMBER_MISSESLOGVALUE" -ne 0 ] 2>/dev/null
   then
    let "LOCAL_NUMBER_HITSDELTA=$LOCAL_NUMBER_HITSVALUE-$LOCAL_NUMBER_HITSLOGVALUE"
    let "LOCAL_NUMBER_MISSESDELTA=$LOCAL_NUMBER_MISSESVALUE-$LOCAL_NUMBER_MISSESLOGVALUE"

    if [ "$LOCAL_NUMBER_HITSDELTA" -ne 0 ] 2>/dev/null && [ "$LOCAL_NUMBER_MISSESDELTA" -ne 0 ] 2>/dev/null
    then
     let "LOCAL_RATIO_HITSDELTA=($LOCAL_NUMBER_HITSDELTA*10000)/($LOCAL_NUMBER_HITSDELTA+$LOCAL_NUMBER_MISSESDELTA)"
     let "LOCAL_RATIO_MISSESDELTA=($LOCAL_NUMBER_MISSESDELTA*10000)/($LOCAL_NUMBER_HITSDELTA+$LOCAL_NUMBER_MISSESDELTA)"
    else
     LOCAL_RATIO_HITSDELTA=""
     LOCAL_RATIO_MISSESDELTA=""
    fi
   else
    LOCAL_RATIO_HITSLOG=""
    LOCAL_RATIO_MISSESLOG=""
   fi

   if [ ! -z "$LOCAL_RATIO_HITS" ] || [ ! -z "$LOCAL_RATIO_HITSLOG" ]
   then
    echo -n "hit ration:"

    if [ ! -z "$LOCAL_RATIO_HITS" ]
    then
     echo -n " ${LOCAL_RATIO_HITS:0:-2}.${LOCAL_RATIO_HITS: -2}%"
    else
     echo -n " -"
    fi

    if [ ! -z "$LOCAL_RATIO_HITSDELTA" ]
    then
     echo -e " (\u0394${LOCAL_RATIO_HITSDELTA:0:-2}.${LOCAL_RATIO_HITSDELTA: -2}%)"
    else
     echo
    fi

    echo -n "miss ration:"

    if [ ! -z "$LOCAL_RATIO_MISSES" ]
    then
     echo -n " ${LOCAL_RATIO_MISSES:0:-2}.${LOCAL_RATIO_MISSES: -2}%"
    else
     echo -n " -"
    fi

    if [ ! -z "$LOCAL_RATIO_MISSESDELTA" ]
    then
     echo -e " (\u0394${LOCAL_RATIO_MISSESDELTA:0:-2}.${LOCAL_RATIO_MISSESDELTA: -2}%)"
    else
     echo
    fi
   fi
  fi
 done
}
